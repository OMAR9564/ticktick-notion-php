<?php

namespace App\Controllers;

use GuzzleHttp\Client;

class IntegrationController extends BaseController
{
    private $notionApiToken;
    private $ticktickClientId;
    private $ticktickClientSecret;

    public function __construct()
    {
        $this->notionApiToken = getenv('NOTION_API_TOKEN');
        $this->ticktickClientId = getenv('TICKTICK_CLIENT_ID');
        $this->ticktickClientSecret = getenv('TICKTICK_CLIENT_SECRET');
    }

    public function index1(): string
    {
        // Load the view with Bootstrap 5 integration
        return view('welcome_message', $this->ticktickClientId);
    }
    public function index(): string
    {
        return view('welcome_message');
    }

    public function activateIntegration()
    {
        // Activate integration logic (e.g., setting up API connections)
        // This can include setting a session variable or a database flag
        session()->set('integration_active', true);
        return redirect()->to('/integration');
    }

    public function syncTasks()
    {
        if (!session()->get('integration_active')) {
            return 'Integration is not active';
        }

        // Sync TickTick tasks to Notion
        $ticktickTasks = $this->getTickTickTasks();
        $this->sendTasksToNotion($ticktickTasks);

        return 'Tasks synced successfully';
    }

    private function getTickTickTasks()
    {
        // Use Guzzle to get tasks from TickTick
        $client = new Client();
        $response = $client->request('GET', 'https://api.ticktick.com/api/v2/tasks', [
            'headers' => [
                'Authorization' => 'Bearer ' . $this->ticktickClientSecret
            ]
        ]);

        return json_decode($response->getBody(), true);
    }

    private function sendTasksToNotion($tasks)
    {
        $client = new Client();
        foreach ($tasks as $task) {
            // Send each task to Notion
            $client->request('POST', 'https://api.notion.com/v1/pages', [
                'headers' => [
                    'Authorization' => 'Bearer ' . $this->notionApiToken,
                    'Content-Type' => 'application/json'
                ],
                'json' => [
                    'parent' => [
                        'database_id' => 'YOUR_NOTION_DATABASE_ID'
                    ],
                    'properties' => [
                        'Name' => [
                            'title' => [
                                [
                                    'text' => [
                                        'content' => $task['title']
                                    ]
                                ]
                            ]
                        ]
                    ]
                ]
            ]);
        }
    }
}
?>